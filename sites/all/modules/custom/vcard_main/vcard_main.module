<?php
/**
 * @file
 * Module's main file.
 */

/**
 * Implements hook_menu().
 */
function vcard_main_menu() {
  $items = [];
  $items['home'] = [
    'type' => MENU_CALLBACK,
    'page callback' => 'vcard_main_home_page',
    'access callback' => TRUE,
  ];
  $items['my_vcard'] = [
    'title' => 'My VCard',
    'type' => MENU_CALLBACK,
    'menu_name' => 'main-menu',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['vcard_main_my_vcard_form'],
    'access arguments' => ['access content'],
  ];

  return $items;
}

/**
 * Home page callback.
 */
function vcard_main_home_page() {
  global $user;

  $page = [];

  // Show elements for authorized users only.
  if ($user->uid) {
    $user_entity = entity_load_single('user', $user->uid);

    if (empty($user_entity->field_vcard)) {
      $page['help_text'] = [
        '#markup' => t(
          'Hint: To start using this service you need to fill some fields in your profile. Go to <a href="@my_vcard">My VCard</a>.',
          ['@my_vcard' => url('my_vcard')]
        ),
      ];
    }
    else {
      // Render user's vcard on homepage.
      $vcard_id = $user_entity->field_vcard[LANGUAGE_NONE][0]['target_id'];
      $vcard_entity = entity_view('vcard', [entity_load_single('vcard', $vcard_id)]);
      $page['vcard'] = [
        '#markup' => drupal_render($vcard_entity),
      ];
    }
  }

  return $page;
}

/**
 * "My VCard" page callback.
 */
function vcard_main_my_vcard_form($form, &$form_state) {
  global $user;
  $user_entity = entity_load_single('user', $user->uid);

  if (empty($user_entity->field_vcard)) {
    // Use new entity for new user.
    $vcard_entity = entity_create('vcard', ['type' => 'vcard']);
  }
  else {
    // Load related vcard entity for user.
    $wrapper = entity_metadata_wrapper('user', $user_entity);
    $vcard_entity = $wrapper->field_vcard->value();
  }

  field_attach_form('vcard', $vcard_entity, $form, $form_state);

  $form['entity'] = [
    '#type' => 'value',
    '#value' => $vcard_entity,
  ];
  $form['user_entity'] = [
    '#type' => 'value',
    '#value' => $user_entity,
  ];

  $form['submit'] = [
    '#type' => 'submit',
    '#value' => t('Save'),
    '#weight' => 100,
  ];

  return $form;
}

/**
 * "My VCard" page form validation.
 */
function vcard_main_my_vcard_form_validation($form, &$form_state) {
  field_attach_form_validate('vcard', $form_state['values']['entity'], $form, $form_state);
}

/**
 * "My VCard" page form submit.
 */
function vcard_main_my_vcard_form_submit($form, &$form_state) {
  $entity = $form_state['values']['entity'];
  field_attach_submit('vcard', $entity, $form, $form_state);
  entity_save('vcard', $entity);

  // @todo For better performance this step can execute once.
  $user = $form_state['values']['user_entity'];
  $wrapper = entity_metadata_wrapper('user', $user);
  if (isset($wrapper->field_vcard)) {
    $wrapper->field_vcard->set($entity->id);
  }
  else {
    watchdog('error', t('Field \'vcard\' does not exists for user.'));
  }
  $wrapper->save();

  // @todo Write good message.
  drupal_set_message(t('Your visit card successfully saved!'));
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function vcard_main_form_user_login_block_alter(&$form, &$form_state) {
  $form['name']['#title_display'] = 'invisible';
  $form['name']['#attributes'] = ['placeholder' => t('E-mail')];
  $form['pass']['#title_display'] = 'invisible';
  $form['pass']['#attributes'] = ['placeholder' => t('Password')];
}

/**
 * Implements hook_block_view_alter().
 */
function vcard_main_block_view_alter(&$data, $block) {
  switch ($block->delta) {
    case 'login':
      // Remove unnecessary title.
      unset($data['subject']);
      // Set link after "Log in" button.
      $data['content']['links']['#weight'] = 101;
      // Hide unnecessary links.
      $data['content']['links']['#access'] = FALSE;
      // Set google button on the top of block.
      $data['content']['submit_google']['#weight'] = -1;
      break;
  }
}
